{
  "MyStock: React template": {
		"prefix": "template", 
		"body": [ 
			"/* eslint-disable no-unused-expressions */",
			"/* eslint-disable react-hooks/exhaustive-deps */",
			"import {",
			"  React,",
			"  useTranslate,",
			"} from '@/utils/require';",
			"import './index.less';",
			"",
			"const ${1:${TM_FILENAME_BASE/(.*).(?:jsx|js)/$1/i}}: React.FC = () => {",
			"  const translate = useTranslate();",
			"",
			"  React.useEffect(() => {",
			"  }, []);", 
			"",
			"  return (",
			"    <div>",
			"      {translate('1')}",
			"    </div>",
			"  );",
			"};",
			"export default ${1:${TM_FILENAME_BASE/(.*).(?:jsx|js)/$1/i}};",
			""
		],
		"description": "MyStock: 快速生成一个 React hook 模板"
	},
	"MyStock: React template Child": {
		"prefix": "template.child", 
		"body": [ 
			"/* eslint-disable no-unused-expressions */",
			"/* eslint-disable react-hooks/exhaustive-deps */",
			"import {",
			"  React,",
			"  useTranslate,",
			"} from '@/utils/require';",
			"import './index.less';",
			"",
			"interface PropsTypes {",
			"  params: any;",
			"}",
			"const ${1:${TM_FILENAME_BASE/(.*).(?:jsx|js)/$1/i}}: React.FC<PropsTypes> = (props) => {",
			"  const { params }: any = props;",
			"  const translate = useTranslate();",
			"",
			"  React.useEffect(() => {",
			"  }, []);", 
			"",
			"  return (",
			"    <div>",
			"      {translate('1')}",
			"    </div>",
			"  );",
			"};",
			"export default ${1:${TM_FILENAME_BASE/(.*).(?:jsx|js)/$1/i}};",
			""
		],
		"description": "MyStock: 快速生成一个带入参的 React hook 模板"
	},
	"MyStock: React template page list": {
		"prefix": "page-list", 
		"body": [ 
			"/* eslint-disable no-unused-expressions */",
			"/* eslint-disable react-hooks/exhaustive-deps */",
			"import {",
			"  React,",
			"  Page,",
			"  rowClickable,",
			"  ColumnType,",
			"  ProTable,",
			"  useTranslate,",
			"} from '@/utils/require';",
			"import './index.less';",
			"",
			"interface PropsTypes {",
			"  params: any;",
			"}",
			"const ${1:${TM_FILENAME_BASE/(.*).(?:jsx|js)/$1/i}}: React.FC<PropsTypes> = (props) => {",
			"  const { params }: any = props;",
			"  const translate = useTranslate();",
			"",
			"  const columns: ColumnType[] = [",
			"    {",
			"      title: translate(''),",
			"      width: 100,",
			"      dataIndex: ''",
			"    },",
			"    {",
			"      title: translate(''),",
			"      width: 100,",
			"      dataIndex: ''",
			"    },",
			"    {",
			"      title: translate(''),",
			"      width: 100,",
			"      dataIndex: ''",
			"    },",
			"    {",
			"      title: translate(''),",
			"      width: 100,",
			"      dataIndex: ''",
			"    },",
			"    {",
			"      title: translate(''),",
			"      width: 100,",
			"      dataIndex: ''",
			"    },",
			"    {",
			"      title: translate('action'),",
			"      width: 100,",
			"      dataIndex: ''",
			"      render:() => (<div>1</div>)",
			"    },",
			"];",
			"",
			"  React.useEffect(() => {",
			"  }, []);", 
			"",
			"  return (",
			"    <Page>",
			"      <div>",
			"        <Page.Header>",
			"          <Page.Title sub_title={translate('')}>",
			"            {translate('')}",
			"          </Page.Title>",
			"        </Page.Header>",
			"        <Page.Filters>",
			"        </Page.Filters>",
			"        <ProTable",
			"          rowKey=''",
			"          stickyParentSelector='.basic-layout-content > div > div'",
			"          columns={columns}",
			"          request={}",
			"          searchModel={}",
			"          emptyText={translate('')}",
			"          rowClickable",
			"          showQuickJumper",
			"          onRow={record => ({",
			"          onClick: (event: any) => {",
			"            if (rowClickable(event)) {",
			"",
			"              }",
			"            }",
			"           })}",
			"        />",
			"      </div>",
			"    </Page>",
		  "  );",
			"};",
			"export default ${1:${TM_FILENAME_BASE/(.*).(?:jsx|js)/$1/i}};",
			""
		],
		"description": "MyStock: 快速生成列表页整体框架 page-list"
	},
	"MyStock: React template pro-table": {
		"prefix": "pro-table", 
		"body": [ 
			"<ProTable",
			"  rowKey=''",
			"  stickyParentSelector='.basic-layout-content > div > div'",
			"  columns={columns}",
			"  request={}",
			"  searchModel={}",
			"  emptyText={translate('')}",
			"  rowClickable",
			"  showQuickJumper",
			"  onRow={record => ({",
			"  onClick: (event: any) => {",
			"    if (rowClickable(event)) {",
			"",
			"      }",
			"    }",
			"   })}",
			"/>",
			""
		],
		"description": "MyStock: 快速生成表格 pro-table"
	},
	"MyStock: React template quit-modal": {
		"prefix": "quit-modal", 
		"body": [ 
			"<Prompt",
			"  when={!quitComfirmed}",
			"  message={(location) => {",
			"    if (!promptExecuted && location.pathname !== '/login') {",
			"      promptExecuted = true;",
			"      Modal.confirm({",
			"        icon: null,",
			"        centered: true,",
      "        closable: true,",
      "        closeIcon: <CloseIcon />,",
      "        title: `${translate('quit')}`,",
      "        content: translate(''),",
      "        okText: translate('quit'),",
      "        cancelText: translate(''),",
      "        onOk: () => {",
      "          const url = '';",
      "          setQuitPath(url);",
      "          setQuitComfirmed(true);",
      "        },",
      "      });",
      "      setTimeout(() => {",
      "        promptExecuted = false;",
      "      }, 500);",
      "    }",
      "    return false;",
      "  }}",
      " >",
      	""
		],
		"description": "MyStock: 快速生成quit模态框 quit-modal"
	},
	"MyStock: React template tab-columns": {
		"prefix": "columns",
		"body": [
			"const columns = [",
			"  {",
	    "    title: translate(''),",
	    "    width: 160,",
	    "    dataIndex: '',",
	    "   },",
	    "   {",
	    "     title: translate(''),",
      "     width: 160,",
      "     dataIndex: '',",
      "     render: (val: any, record: any) => {",
      "       // TO DO",
  		"     }",
  		"    },",
			"   {",
      "     title: translate(''),",
      "     hint: translate(''),",
      "     width: 160,",
      "     dataIndex: '',",
      "     sorter: {",
      "       key: '',",
      "       multiple: 1",
      "     },",
			"   }",
			" ];",
			""
		],
		"description": "MyStock: 快速生成tab-columns"
	},
	"MyStock: React template normal-modal": {
		"prefix": "modal",
		"body": [
				"<Modal",
				"  wrapClassName=''",
				"  visible={visible}",
				"  title={translate('')}",
				"  width={}",
				"  okText={translate('')}",
				"  cancelText={translate('')}",
				"  onOk={_ => {",
				"    // TO DO",
				"  }}",
				"  onCancel={_ => {",
				"    // TO DO",
				"  }}",
				">",
				"  <div> 1 </div>",
				"</Modal>",
		],
		"description": "MyStock: 快速生成模态框normal-modal"
	},
	"MyStock: React template mass-tool": {
		"prefix": "mass-tool",
		"body": [
				"<MassToolBar",
				"  message=''",
				"  selectedCount={selectedCount}",
				"  maxCount={maxCount}",
				"  viewSelected={}",
				">",
				"  <Tooltip title={!selectedCount ? translate('please_select_at_least_1_product_first') : null}>",
				"    <Button",
				"      disabled={!selectedCount}",
				"      onClick={}",
				"    >",
				"      {translate('')}",
				"    </Button>",
				"  </Tooltip>",
				"</MassToolBar>",
		],
		"description": "MyStock: 快速生成mass-tool"
	},
	"MyStock: React template es-search": {
		"prefix": "es-search",
		"body": [
				"<div className=''>",
				"  <span className=''>",
				"    {translate('')}",
				"  </span>",
				"  <EsSearch",
				"    url='$1'",
				"    esDocName='$2'",
				"    onSelect={(value: any) => {",
				"     // TO DO",
				"    }}",
				"    onChange={(value: any) => {",
				"     // TO DO",
				"    }}",
				"    onPressEnter={(value: any) => {",
				"     // TO DO",
				"    }}",
				"  />",
				"</div>",
		],
		"description": "MyStock: 快速生成es-search"
	},
	"MyStock: React template select-input-option": {
		"prefix": "select-input-option",
		"body": [
			"const inputCommonProps = {",
			"  style: { width: 360 },",
			"  placeholder: translate('input'),",
			"};",
			"const selectOptions: SelectOption[] = [",
			"  {",
			"    name: translate(''),",
			"    value: '',",
			"    extraProps: {",
			"      ...inputCommonProps,",
			"      esDocName: '',",
			"      url: '',",
			"    },",
			"    type: 'esSearch',",
			"  },",
			"  {",
			"    name: translate(''),",
			"    value: '',",
			"    extraProps: inputCommonProps,",
			"  },",
			"  {",
			"    name: translate(''),",
			"    value: '',",
			"    extraProps: inputCommonProps,",
			"  }",
			"]",
		],
		"description": "MyStock: 快速生成select-input-option"
	},
	"MyStock: React template select-input": {
		"prefix": "select-input",
		"body": [
				"<SelectInput",
				"  selectOptions={selectOptions}",
				"  onChange={(value: any) =>{}}",
				"  onPressEnter={(value: any) =>{}}",
				"  onEsSearchSelect={(value: any) =>{}}",
				"  onSelect={(key: any) => {}}",
				"  selectProps={{",
				"    defaultValue: '',",
				"    style: { width: 360 },",
				"  }}",
				"/>",
		],
		"description": "MyStock: 快速生成select-input"
	},
	"MyStock: React template card": {
		"prefix": "card",
		"body": [
				"<Card bordered={false}>",
				"  <div className='card-title'>",
				"    {translate('basic_info')}",
				"  </div>",
				"  <section>",
				"    // TO DO",
				"  </section>",
				"</Card>",
		],
		"description": "MyStock: 快速生成card"
	},
	"MyStock: React template bread-crumb": {
		"prefix": "bread-crumb",
		"body": [
				"<Breadcrumb>",
				"  <Breadcrumb.Item>",
				"    <Link to=''>{translate('')}</Link>",
				"  </Breadcrumb.Item>",
				"  <Breadcrumb.Item>",
				"    {translate('')}",
				"  </Breadcrumb.Item>",
				"</Breadcrumb>",
		],
		"description": "MyStock: 快速生成bread-crumb"
	},
	"MyStock: React template tabs": {
		"prefix": "tabs",
		"body": [
				"<Tabs",
				"  activeKey={tabKey}",
				"  onChange={changeTab}",
				"  animated={false}",
				"  className=''",
				">",
				"  <Tabs.TabPane tab={translate('')} key='1'>",
				"    // todo",
				"  </Tabs.TabPane>",
				"  <Tabs.TabPane tab={translate('')} key='2'>",
				"    // todo",
				"  </Tabs.TabPane>",
				"</Tabs>",
		],
		"description": "MyStock: 快速生成tabs"
	},
	"MyStock: React template tabs-status(Pending、Done、Cancelled)": {
		"prefix": "tabs-status",
		"body": [
				"<Tabs onChange={changeTab} type='card' defaultActiveKey={tabKey}>",
				"  <TabPane tab={`${translate('Pending')} ${pendingAccount}`} key='1'>",
				"    {tabKey === '1' ? renderTable() : null}",
				"  </TabPane>",
				"  <TabPane tab={translate('Done')} key='2'>",
				"    {tabKey === '2' ? renderTable() : null}",
				"  </TabPane>",
				"  <TabPane tab={translate('Cancelled')} key='9'>",
				"    {tabKey === '9' ? renderTable() : null}",
				"  </TabPane>",
				"</Tabs>",
		],
		"description": "MyStock: 快速生成tabs-status(Pending、Done、Cancelled)"
	},
	"MyStock: React template text-status": {
		"prefix": "text-status",
		"body": [
			"<TextStatus text={translate('main')} type='green' />"
		],
		"description": "MyStock: 快速生成text-status"
	},
	"MyStock: React template upload": {
		"prefix": "upload",
		"body": [
				"<SimpleUploadArea",
				"  accept='.xlsx,.xls'",
				"  beforeUploadText={translate('')}",
				"  uploadRequest={uploadRequest}",
				"  userGuideSlot={userGuideSlot}",
				"  loading={!!batchTasks.length || uploading}",
				"  disabledHint={translate('')}",
				"/> ",
		],
		"description": "MyStock: 快速上传upload"
	},
}